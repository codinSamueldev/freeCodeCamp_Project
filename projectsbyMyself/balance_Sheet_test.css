span[class~="sr-only"]{ /* este CSS es comúnmente utilizado para asegurar que los elementos seleccionados queden completamente ocultos visualmente. */
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important; /* La propiedad clip se usa para definir las visibles porciones de un elemento. */
    clip-path: inset(50%) !important; /* El clip-path determina la forma que el clip debe tomar. */
    height: 1px !important;
    width: 1px !important;
    overflow: hidden !important;
    white-space: nowrap !important;
    /* Nos aseguramos de que no queden visibles, y también que no estén dentro la vista de la página. */
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important; /* La palabra clave !important permite que no estemos constantemente revisión de sobre-escribir nuestro código; por lo cual, esta nos asegura que las propiedades están siempre aplicadas, sin importar su orden o especifidad. */
}

html{
    box-sizing: border-box;
}

body{
    font-family: 'IBM Plex Sans', sans-serif;
    color: #0c0c26;
}

h1{
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1rem 0.75rem;
}

h1 .flex{
    display: flex;
    flex-direction: column-reverse;
    gap: 0.75rem;
}

h1 .flex span:first-of-type{
    font-size: 1.2rem;
}

h1 .flex span:last-of-type{
    font-size: 28px;
}

section{ /* Making it responsive. */
    max-width: 40rem;
    margin: 0 auto;
    border: 0.25rem solid #E3F2C1;
}

.years{
    display: flex;
    justify-content: flex-end;
    background-color: #0a0a23;
    color: ghostwhite;
    padding: 0.5rem;
    margin: -0.9px;
    z-index: 999;
}

.years span[class]{
    width: 4.5rem;
    font-weight: bold;
    text-align: right;
}

.table-wrap{
    padding: 12px; /* Acá solucioné el problema el cual estaba sobrando espacio en la parte baja de la tabla creando un espacio en blanco, lo cual no se veía bien. */
}

table{
    border-collapse: collapse;
    border: 0;
    width: 100%;
    position: relative;
}

table caption{
    color: #0F6292;
    font-size: 1.3rem;
    margin: 1rem 0 1rem;
    text-align: left;
    border-top: 2px solid maroon;
}

#unset{
    border-top: unset;
}

tbody td{
    width: 100vw;
    max-width: 4rem;
    min-width: 4rem;
}

span:not(.sr-only){
    font-weight: normal;
}

tr.data th{
    text-align: left;
}

tr.data th .description{
    display: block;
    font-style: italic;
    padding: 1rem 0 0.75rem;
    margin-right: -14.5rem; /* Aquí logré solucionar el problema de las descripciones, ya que se apilaban entre sí y creaban un espacio en blanco al lado derecho de la tabla. */
}

tr.data td{
    vertical-align: top;
    text-align: right;
    padding: 0.3rem 0.25rem 0;
}

tr[class="total"] th{
    text-align: left;
}

tr[class="total"] td{
    text-align: right;
    font-weight: bold;
    border-bottom: 2px solid black;
}

tr[class="data"]{
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr[class="total"]:hover{
    background: #99c9ff;
}

td[class="current"]{
    font-style: italic;
}

tr.data th{
    padding: 0.4rem 0 0 0.25rem;
}