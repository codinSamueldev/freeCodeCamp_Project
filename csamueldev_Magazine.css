*, ::before, ::after{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

html{
    font-size: 62.5%; /* 62.5% to font-size set 10px for the whole page. */
}

body{
    font-family: Baskervville, serif;
    color: linen;
    background-color: rgb(20, 30, 40);
}

h1{
    font-family: Anton, sans-serif;
}

h2, h3, h4, h5, h6{
    font-family: Raleway, sans-serif;
}

a{
    text-decoration: none;
    color: linen;
}

main{
    display: grid;
    grid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr); /* This will create three columns where the middle column is 94rem wide, and the first and last columns are both 1 fraction of the remaining space in the grid container. */
    row-gap: 3rem;
}

img{
    width: 100%;
    object-fit: cover; /* cover will set the image to fill the container, cropping as needed to avoid changing the aspect ratio. */
}

hr{
    margin: 1.5rem 0;
    border: 1px solid rgba(120, 120, 120, 0.6);
}

.heading{
    display: grid;
    grid-column: 2/3; /* this will tell the .heading element to start at grid line 2 and end at grid line 3. */
    grid-template-columns: repeat(2, 1fr); /* Setting the grid-template-columns: property to repeat(2, 1fr); would create 2 columns each 1fr wide. */
    row-gap: 1.5rem;
}

.text{
    grid-column: 2 / 3;
    font-size: 1.8rem;
    letter-spacing: 0.6px;
    column-width: 25rem;
    text-align: justify;
}

.hero{
    grid-column: 1 / -1;
    position: relative;
}

.hero-title{
    text-align: center;
    color: orangered;
    font-size: 8rem;
}

.hero-subtitle{
    font-size: 2.4rem;
    color: orangered;
    text-align: center;
}

.author{
    font-size: 2rem;
    font-family: Raleway, sans-serif;
}

.author-name a:hover{
    background-color: #306203;
}

.publish-date{
    color: rgba(255, 255, 255, 0.5);
}

.social-icons{
    display: grid;
    font-size: 3rem;
    grid-template-columns: repeat(5, 1fr);
    grid-auto-flow: column; /* If I wanted to add more icons, this property will set them in columns and grid-auto-columns will set the behavior. */
    grid-auto-columns: 1fr;
    align-items: center; /* align-items will align child elements (when using grid) along the column axis. therefore, justify-items will align child elements along the row axis. */
}

.first-paragraph::first-letter{
    font-size: 6rem;
    color: orangered;
    float: left;
    margin-right: 1rem;
}

.quote{
    color: #00beef;
    font-size: 2.4rem;
    text-align: center;
    font-family: Raleway, sans-serif;
}

.quote::before{
    content: '" ';
}

.quote::after{
    content: ' "';
}

.text-with-images{
    display: grid;
    grid-template-columns: 1fr 2fr;
    column-gap: 3rem;
    margin-bottom: 3rem;
}

.lists{
    list-style-type: none;
    margin-top: 2rem;
}

.lists li{
    margin-bottom: 1.5rem;
}

.list-title, .list-subtitle{
    color: #00beef;
}

.image-wrapper{
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-template-rows: repeat(3, min-content); /* This will give our grid rows that adjust in height based on the content, but columns that remain a fixed width based on the container. */
    gap: 2rem; /* If given one value, it sets the column-gap and row-gap both to that value. If given two values, it sets the row-gap to the first value and the column-gap to the second. */
    place-items: center; /* The place-items property can be used to set the align-items and justify-items values at the same time. The place-items property takes one or two values. If one value is provided, it is used for both the align-items and justify-items properties. If two values are provided, the first value is used for the align-items property and the second value is used for the justify-items property. */
}

.image-1, .image-3{
    grid-column: 1 / -1;
}

@media only screen and (max-width: 720px) {
    .image-wrapper{
        grid-template-columns: 1fr;
    }
}

@media only screen and (max-width: 600px) {
    .image-wrapper{
        grid-template-columns: 1fr;
    }
}

@media only screen and (max-width: 550px) {
    .hero-title{
        font-size: 6rem;
    }

    .hero-subtitle, .author, .quote, .list-title{
      font-size: 1.8rem;
    }

    .social-icons{
      font-size: 2rem;
    }

    .text{
      font-size: 1.6rem;
    }
}

@media only screen and (max-width: 420px){
    .hero-title{
        font-size: 4.5rem;
    }
}